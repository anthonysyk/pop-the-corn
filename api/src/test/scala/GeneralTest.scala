import controllers.GraphQLController
import models.{Genre, UserProfile}
import org.scalatest.FunSuite

class GeneralTest extends FunSuite {

  import io.circe._
  import io.circe.generic.auto._
  import io.circe.parser._

  test("Genre To String test") {
    Genre.values.map(_.toString).foreach(println)

    assert(Genre.ScienceFiction.toString == "Science Fiction")
  }

  test("Serialize UserProfile") {
    val mocked = """{"genres":{"12":0.5629629629629629,"14":0.4916666666666667,"16":0.5166666666666666,"18":0.6333333333333333,"27":1.222222222222222,"28":0.6523809523809524,"35":0.5666666666666667,"36":0,"37":0,"53":0.8333333333333334,"80":0.6888888888888888,"99":2,"878":0.5388888888888889,"9648":0.5,"10402":0.45,"10749":0.4666666666666666,"10751":0.5166666666666666,"10752":0,"10769":0,"10770":0},"companies":[[6623,0.6666666666666666],[7038,0.6666666666666666],[91331,0.6666666666666666],[2,1],[6125,1],[33,1],[6704,1],[264,0.4],[420,0.4],[3036,0.4],[84424,0.4],[84425,0.4],[306,0.3333333333333333],[1645,0.3333333333333333],[2735,0.3333333333333333],[6408,0.3333333333333333],[22213,0.3333333333333333],[28788,0.3333333333333333],[2,1],[420,1],[306,0.4],[7505,0.4],[11307,0.4],[22213,0.4],[78091,0.4],[4,1],[10211,1],[5,0.6666666666666666],[10761,0.6666666666666666],[69434,0.6666666666666666],[429,0.4],[444,0.4],[507,0.4],[6194,0.4],[9993,0.4],[491,0.4],[6194,0.4],[23008,0.4],[36259,0.4],[36433,0.4],[491,0.4],[2527,0.4],[10161,0.4],[33681,0.4],[53247,0.4],[2,0.6666666666666666],[6125,0.6666666666666666],[10282,0.6666666666666666],[5,0.2857142857142857],[79,0.2857142857142857],[333,0.2857142857142857],[7193,0.2857142857142857],[19961,0.2857142857142857],[34034,0.2857142857142857],[83838,0.2857142857142857],[2740,0.6666666666666666],[17980,0.6666666666666666],[19900,0.6666666666666666],[94512,2],[1030,1],[1793,1],[33,0.6666666666666666],[3172,0.6666666666666666],[12236,0.6666666666666666],[126,0.6666666666666666],[3287,0.6666666666666666],[7738,0.6666666666666666],[12,0.2857142857142857],[444,0.2857142857142857],[11565,0.2857142857142857],[31375,0.2857142857142857],[47502,0.2857142857142857],[54392,0.2857142857142857],[76907,0.2857142857142857],[4,0.5],[2575,0.5],[7493,0.5],[32300,0.5]]}"""
    val userProfile = parse(mocked).right.toOption.getOrElse(Json.Null).as[UserProfile].right.toOption
    println(userProfile)
  }

}
